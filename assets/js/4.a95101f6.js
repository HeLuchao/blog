(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{161:function(n,t,i){"use strict";i.r(t);var e=i(0),l=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"content"},[t("p",[this._v("#工作中常用到的CSS常见布局方式")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('居中布局\n\n以下居中布局均以不定宽为前提，定宽情况包含其中\n\n1、水平居中\n\na) inline-block + text-align\n.parent{\n    text-align: center;\n}\n.child{\n    display: inline-block;\n}\n兼容至IE8，对于IE567并不支持inline-block，需要使用css hack进行兼容\nb) table + margin\n.child{\n    display: table;\n    margin: 0 auto;\n}\n兼容至IE8，可以使用<table/>代替css写法，兼容性良好\nc) absolute + transform\n.parent{\n    position: relative;\n    height:1.5em;\n}\n.child{\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n}\n兼容至IE9，因为transform兼容性限制，如果.child为定宽元素，可以使用以下写法，兼容性极佳\n\n.parent{\n    position: relative;\n    height:1.5em;\n}\n.child{\n    position: absolute;\n    width:100px;\n    left: 50%;\n    margin-left:-50px;\n}\nd) flex + justify-content\n.parent{\n    display: flex;\n    justify-content: center;\n}\n.child{\n    margin: 0 auto;\n}\n\n2、垂直\n\na) table-cell + vertial-align\n.parent{\n\tdisplay: table-cell;\n\tvertical-align: middle;\n}\n可替换成<table />布局，兼容性良好\nb) absolute + transform\n.parent{\n\tposition: relative;\n}\n.child{\n\tposition: absolute;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n}\n存在css3兼容问题，定宽兼容性良好\nc) flex + align-items\n.parent{\n\tdisplay: flex;\n\talign-items: center;\n}\n高版本浏览器兼容，低版本不适用\n3、水平垂直\n\na) inline-block + table-cell + text-align + vertical-align\n.parent{\n\ttext-align: center;\n\tdisplay: table-cell;\n\tvertical-align: middle;\n}\n.child{\n\tdisplay: inline-block;\n}\n兼容至IE8\nb) absolute + transform\n.parent{\n\tposition: relative;\n}\n.child{\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%,-50%);\n}\n兼容IE10以上\nc) flex\n.parent{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n多列布局\n1、一列定宽，一列自适应\n\na) float + margin\n.left{\n\tfloat: left;\n\twidth: 100px;\n}\n.right{\n\tmargin-left: 120px;\n}\n\nb) float + overflow\n.left{\n\tfloat: left;\n\twidth: 100px;\n\tmargin-right: 20px;\n}\n.right{\n\toverflow: hidden;\n}\n\nc) table\n.parent{\n\tdisplay: table; width: 100%;\n\ttable-layout: fixed;\n}\n.left,.right{\n\tdisplay: table-cell;\n}\n.left{\n\twidth: 100px;\n\tpadding-right: 20px;\n}\nd) flex\n.parent{\n\tdisplay: flex;\n}\n.left{\n\twidth: 100px;\n\tpadding-right: 20px;\n}\n.right{\n\tflex: 1;\n}\n2、多列定宽，一列自适应\n\na) float + overflow\n.left,.center{\n\tfloat: left;\n\twidth: 100px;\n\tmargin-right: 20px;\n}\n.right{\n\toverflow: hidden;\n}\nb) table\n.parent{\n\tdisplay: table; width: 100%;\n\ttable-layout: fixed;\n}\n.left,.center,.right{\n\tdisplay: table-cell;\n}\n.right{\n\twidth: 100px;\n\tpadding-right: 20px;\n}\nc) flex\n.parent{\n\tdisplay: flex;\n}\n.left,.center{\n\twidth: 100px;\n\tpadding-right: 20px;\n}\n.right{\n\tflex: 1;\n}\n3、一列不定宽，一列自适应\n\na) float + overflow\n.left{\n\tfloat: left;\n\tmargin-right: 20px;\n}\n.right{\n\toverflow: hidden;\n}\n.left p{width: 200px;}\nb) table\n.parent{\n\tdisplay: table; width: 100%;\n}\n.left,.right{\n\tdisplay: table-cell;\n}\n.left{\n\twidth: 0.1%;\n\tpadding-right: 20px;\n}\n.left p{width:200px;}\nc) flex\n.parent{\n\tdisplay: flex;\n}\n.left{\n\tmargin-right: 20px;\n}\n.right{\n\tflex: 1;\n}\n.left p{width: 200px;}\n4、多列不定宽，一列自适应\n\na) float + overflow\n.left,.center{\n\tfloat: left;\n\tmargin-right: 20px;\n}\n.right{\n\toverflow: hidden;\n}\n.left p,.center p{\n\twidth: 100px;\n}\n5、等分\n\na) float + margin\n.parent{\n\tmargin-left: -20px;\n}\n.column{\n\tfloat: left;\n\twidth: 25%;\n\tpadding-left: 20px;\n\tbox-sizing: border-box;\n}\nb) table + margin\n.parent-fix{\n\tmargin-left: -20px;\n}\n.parent{\n\tdisplay: table;\n\twidth:100%;\n\ttable-layout: fixed;\n}\n.column{\n\tdisplay: table-cell;\n\tpadding-left: 20px;\n}\nc) flex\n.parent{\n\tdisplay: flex;\n}\n.column{\n\tflex: 1;\n}\n.column+.column{\n\tmargin-left:20px;\n}\n6、等高\n\na) float + overflow\n.parent{\n\toverflow: hidden;\n}\n.left,.right{\n\tpadding-bottom: 9999px;\n\tmargin-bottom: -9999px;\n}\n.left{\n\tfloat: left; width: 100px;\n}\n.right{\n\toverflow: hidden;\n}\nb) table\n.parent{\n\tdisplay: table; \n\twidth: 100%;\n}\n.left{\n\tdisplay:table-cell; \n\twidth: 100px;\n\tmargin-right: 20px;\n}\n.right{\n\tdisplay:table-cell; \n}\nc) flex\n.parent{\n\tdisplay:flex;\n\twidth: 100%;\n}\n.left{\n\twidth: 100px;\n}\n.right{\n\tflex:1;\n}\n\nflex\n.main {\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: space-between;\n}\n.item {\n    display: inline-block;\n}\n.empty{\n    height: 0;\n    visibility: hidden;\n}\n\n圣杯布局&双飞翼布局\n\n\n圣杯布局\n\n【demo】codepen.io/zwwill/pen/…\n<div class="container">\n    <div class="header">header</div>\n    <div class="wrapper clearfix">\n        <div class="main col">main</div>\n        <div class="left col">left</div>\n        <div class="right col">right</div>\n    </div>\n    <div class="footer">footer</div>\n</div>\n.container {width: 500px; margin: 50px auto;}\n.wrapper {padding: 0 100px 0 100px;}\n.col {position: relative; float: left;}\n.header,.footer {height: 50px;}\n.main {width: 100%;height: 200px;}\n.left {width: 100px; height: 200px; margin-left: -100%;left: -100px;}\n.right {width: 100px; height: 200px; margin-left: -100px; right: -100px;}\n.clearfix::after {content: ""; display: block; clear: both; visibility: hidden; height: 0; overflow: hidden;}\n双飞翼布局\n\n<div class="container">\n    <div class="header">header</div>\n    <div class="wrapper clearfix">\n        <div class="main col">\n            <div class="main-wrap">main</div>\n        </div>\n        <div class="left col">left</div>\n        <div class="right col">right</div>\n    </div>\n    <div class="footer">footer</div>\n</div>\n.col {float: left;}\n.header {height: 50px;}\n.main {width: 100%;}\n.main-wrap {margin: 0 100px 0 100px;height: 200px;}\n.left {width: 100px; height: 200px; margin-left: -100%;}\n.right {width: 100px; height: 200px; margin-left: -100px;}\n.footer {height: 50px;}\n.clearfix::after {content: ""; display: block; clear: both; visibility: hidden; height: 0; overflow: hidden;}\n定位布局\n\n<div class="header">header</div>\n<div class="wrapper">\n    <div class="main col">\n        main\n    </div>\n    <div class="left col">\n        left\n    </div>\n    <div class="right col">\n        right\n    </div>\n</div>\n<div class="footer">footer</div>\n.wrapper { position: relative; }\n.main { margin:0 100px;}\n.left { position: absolute; left: 0; top: 0;}\n.right { position: absolute; right: 0; top: 0;}\n\n\n')])])])])}],!1,null,null,null);l.options.__file="CSS常见布局.md";t.default=l.exports}}]);